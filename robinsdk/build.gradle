apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
group='com.codyy.mobile'
android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 2
        versionName "1.1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    implementation 'androidx.appcompat:appcompat:1.1.0'
}

//android.libraryVariants.all { variant ->
//    variant.outputs.each { output ->
//
//        if(output.outputFile != null) {
//            String redirectName = "${rootDir}/../../bin/android/"
//            if (output.outputFile.name.endsWith('-debug.aar')) {
//                redirectName += "RobinSDK_debug.aar"
//                output.outputFile = file(redirectName)
//            } else if (output.outputFile.name.endsWith('-release.aar')) {
//                redirectName += "RobinSDK.aar"
//                output.outputFile = file(redirectName)
//            }
//        }
//    }
//}

//android.libraryVariants.all { variant ->
//    variant.outputs.all {
//        if (outputFileName.endsWith('-debug.aar')) {
//            outputFileName = "../../../../../../bin/android/RobinSDK_debug.aar"
//        } else if (outputFileName.endsWith('-release.aar')) {
//            outputFileName = "../../../../../../bin/android/RobinSDK.aar"
//        }
//    }
//}

//gradlew assembleRelease
//---------------------------------------------
// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}
javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
        title "robinsdk1.1.0"
    }
}
// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}